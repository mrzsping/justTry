1.编译原理:
  编译语言，及时编译，性能优化
  传统编译: 分词/词法分析(将由字符组成的字符串分解成（对编程语言来说）词法单元，词法分析根据有无状态判定) -> 解析/语法分析(将词法单元流（数组）转换成一个由元素逐级嵌套所组成的抽象语法树) -> 代码生成

2.作用域:
  引擎: 负责编译及执行
  编译器: 责语法分析及代码生成(包括找到所有声明，并用合适的作用域将它们关联起来)
  作用域: 负责收集并维护由所有声明的标识符（变量）组成的一系列查询，并实施一套非常严格的规则，确定当前执行的代码对这些标识符的访问权限

3.LHS查找: 查找的目的是对变量进行赋值

4.RHS查找: 获取变量的值

5.未查找到: 不成功的RHS引用会导致抛出ReferenceError异常，不成功的LHS引用会导致自动隐式添加全局变量
 
