1.分层：横向（上下游依赖）-> 应用（如搜索）、服务（如购物车服务）、数据（如数据库、缓存）-> 边界与约束 -> 从初始就开始分层，部署到不同服务器

2.分割：纵向（不同功能服务分割，构建高内聚低耦合模块单元）

3.分布式：处理高并发与高数据量 -> 通过网络影响性能，可用性降低，数据正确性降低，依赖变得复杂 -> 分布式应用和服务，分布式静态资源，分布式数据和存储，分布式计算，分布式配置，分布式锁（不同系统访问同一组数据防止干扰），分布式文件

4.集群：并发特性，加入新机器即可

5.缓存：本地、cdn、反向代理、分布式

6.异步：业务消息传递 -> 单一服务器（多线程共享内存队列）-> 分布式系统（分布式消息队列）-> 可用性 + 响应速度 + 消除并发高峰 -> 影响用户体验、业务流程（产品设计改进）

7.冗余：防止宕机（冷备份：定期备份，热备份：数据库主从分离，同步）

8.自动化：代码管理（根据代号自动创建分支，合并）-> 测试（部署到测试环境，测试用例，反馈报告） -> 安全监测（静态安全扫描，攻击测试） -> 部署 -> 监测（心跳监测、监控性能） -> 报警 -> 失效转移（隔离失效服务器） -> 失效恢复（保证数据一致性） -> 降级（超出最大处理能力，拒绝请求，关闭某些服务） -> 分配资源（空闲资源分配，扩大部署规模）

9.安全：验证码、密码、通信加密、过滤、风险控制

10.微博：