1.词法作用域: 定义在词法阶段的作用域。换句话说，词法作用域是由你在写代码时将变量和块作用域写在哪里来决定的，因此当词法分析器处理代码时会保持作用域不变（大部分情况下是这样的）

2.注意: 无论函数在哪里被调用，也无论它如何被调用，它的词法作用域都只由函数被声明时所处
的位置决定

3.欺骗词法: eval(修改已经存在的词法作用域)/setTimeout/setInterval/new Function(){}/with(将一个对象的引用当作作用域来处理，将对象的属性当作作用域中的标识符来处理) ->就好像代码写在那里一样

4.性能消耗巨大: js引擎编译某些优化依赖于代码词法静态分析，需要确定位置
